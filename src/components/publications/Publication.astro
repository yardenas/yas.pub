---
import type { ImageMetadata } from 'astro';
import { Icon } from 'astro-icon/components';
import Image from '~/components/common/Image.astro';
import PostTags from '~/components/blog/Tags.astro';

import { getPermalink } from '~/utils/permalinks';
import { findImage } from '~/utils/images';
import { getFormattedDate } from '~/utils/utils';
import type { Publication } from '~/types';

export interface Props {
  publication: Publication;
}

const { publication } = Astro.props;
const image = (await findImage(publication.image)) as ImageMetadata | undefined;
---

<article class={`max-w-md mx-auto md:max-w-none flex flex-row gap-6 md:gap-8 ${image ? 'md:grid-cols-2' : ''}`}>
  {
    image && (
      <div class="bg-gray-400 dark:bg-slate-700 rounded shadow-lg">
        {image && (
          <Image
            src={image}
            class="object-fill w-full h-full mb-6 rounded shadow-lg bg-gray-400 dark:bg-slate-700"
            widths={[400, 128]}
            width={128}
            sizes="(max-width: 128px) 400px, 128px"
            alt={publication.title}
            loading="lazy"
            decoding="async"
          />
        )}
      </div>
    )
  }
  <div class="mt-2">
    <header>
      <div class="mb-1">
        <span class="text-sm">
          <Icon name="tabler:clock" class="w-3.5 h-3.5 inline-block -mt-0.5 dark:text-gray-400" />
          <time datetime={String(publication.publishDate)} class="inline-block"
            >{getFormattedDate(publication.publishDate)}</time
          >
          {
            publication.authors && (
              <>
                {' '}
                · <Icon name="tabler:user" class="w-3.5 h-3.5 inline-block -mt-0.5 dark:text-gray-400" />
                <span>{publication.authors.map((author) => author.replaceAll('-', ' '))}</span>
              </>
            )
          }
          {
            publication.category && (
              <>
                {' '}
                ·{' '}
                <a class="capitalize hover:underline" href={getPermalink(publication.category, 'category')}>
                  {publication.category.replaceAll('-', ' ')}
                </a>
              </>
            )
          }
        </span>
      </div>
      <h2 class="text-xl sm:text-2xl font-bold leading-tight mb-2 font-heading dark:text-slate-300">
        {
          publication.link ? (
            <a
              class="hover:text-primary dark:hover:text-blue-700 transition ease-in duration-200"
              href={publication.link}
            >
              {publication.title}
            </a>
          ) : (
            publication.title
          )
        }
      </h2>
    </header>

    <footer class="mt-5">
      <PostTags tags={publication.tags} />
    </footer>
  </div>
</article>
